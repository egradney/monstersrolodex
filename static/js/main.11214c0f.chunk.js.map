{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchbox/searchbox.component.jsx","components/search-by/search-by.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","SearchBy","handleSearchChange","value","App","e","setState","searchField","target","searchType","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wSAWeA,EARK,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAAF,OAChB,sBAAKC,UAAU,oEAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,4BACtB,mCAAMJ,EAAQK,QACd,kCAAKL,EAAQM,aCHRC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACpB,qBAAKP,UAAU,YAAf,SACKO,EAASC,KAAI,SAAAT,GAAO,OACjB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UCJlBM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBAAOX,UAAU,SAASY,KAAK,SAC/BF,YAAaA,EACbG,SAAUF,MCHDG,G,YAAW,SAAC,GAAD,IAAIC,EAAJ,EAAIA,mBAAJ,OAChB,yBAAQf,UAAU,0BAA0Ba,SAAUE,EAAtD,UACI,wBAAQC,MAAM,OAAd,qBACA,wBAAQA,MAAM,QAAd,2BC6DGC,E,kDA5Db,aAAe,IAAD,8BACV,gBAcJN,aAAe,SAACO,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOL,SAhB3B,EAmBdD,mBAAqB,SAACG,GACpB,EAAKC,SAAS,CAACG,WAAYJ,EAAEG,OAAOL,SAlBlC,EAAKO,MAAQ,CACThB,SAAU,GACVa,YAAa,GACbE,WAAW,QALL,E,qDASd,WAAqB,IAAD,OAChBE,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACZ,SAAUqB,S,oBAW5C,WAAU,IAAD,EACqCC,KAAKN,MAA1ChB,EADA,EACAA,SAAUa,EADV,EACUA,YAAaE,EADvB,EACuBA,WACxBQ,EAAmBvB,EAASwB,QAAO,SAAAhC,GAAO,OAC9CA,EAAQuB,GAAYU,cAAcC,SAASb,EAAYY,kBAEzD,OAAgC,IAA5BF,EAAiBI,OAEjB,sBAAKlC,UAAU,MAAf,UACE,kDACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CACAU,YAAY,kBACZC,aAAckB,KAAKlB,eAEnB,cAAC,EAAD,CAAUI,mBAAoBc,KAAKd,wBAEvC,oBAAIf,UAAU,UAAd,kCAKF,sBAAKA,UAAU,MAAf,UACE,kDACE,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CACAU,YAAY,kBACZC,aAAckB,KAAKlB,eAEnB,cAAC,EAAD,CAAUI,mBAAoBc,KAAKd,wBAEvC,cAAC,EAAD,CAAUR,SAAUuB,W,GAtDZK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.11214c0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport 'tachyons'\r\n\r\nexport const Card = ({monster}) => (\r\n    <div className='card-container tc bg-light-blue dib br3 pa3 ma2 grow bw1 shadow-5'>\r\n        <img alt='monster' src={`https://robohash.org/${monster.id}?set=set2&size=200x200`}/>\r\n        <h2> {monster.name}</h2>\r\n        <p> {monster.email}</p>\r\n    </div>\r\n);\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../card/card.component';\r\nimport 'tachyons'\r\n\r\nexport const CardList = ({ monsters }) => (\r\n    <div className='card-list'>    \r\n        {monsters.map(monster =>\r\n            <Card key={monster.id} monster={monster}/>\r\n        )}\r\n    </div>\r\n);\r\n\r\n","import React from 'react'\r\nimport './searchbox.styles.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input className='search' type='search' \r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n    />\r\n);","import React from 'react'\r\nimport './search-by.styles.css'\r\n\r\nexport const SearchBy = ( { handleSearchChange } ) =>\r\n        <select className=\"searchby pa2 ma2 bodoni\" onChange={handleSearchChange}>\r\n            <option value=\"name\">by name</option>\r\n            <option value=\"email\">by email</option>\r\n        </select>;","import './App.css';\nimport React, {Component} from 'react';\nimport { CardList } from './components/card-list/card-list.component.jsx';\nimport { SearchBox } from './components/searchbox/searchbox.component.jsx';\nimport { findRenderedDOMComponentWithClass } from 'react-dom/test-utils';\nimport {SearchBy} from './components/search-by/search-by.component.jsx'\nclass App extends Component {\n  constructor() {\n      super();\n      this.state = {\n          monsters: [],\n          searchField: '',\n          searchType:'name',\n      };\n  }\n\n  componentDidMount() {\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}));\n  };\n\n  handleChange = (e) => {\n      this.setState({searchField: e.target.value});\n  };\n\n  handleSearchChange = (e) => {\n    this.setState({searchType: e.target.value});\n};\n    \n  render() {\n    const {monsters, searchField, searchType} = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster[searchType].toLowerCase().includes(searchField.toLowerCase())\n      )\n    if (filteredMonsters.length === 0) {\n      return (\n        <div className=\"App\">\n          <h1>Monsters Rolodex</h1>\n            <div className=\"searching\">\n              <SearchBox \n              placeholder='search monsters'\n              handleChange={this.handleChange}\n              />\n              <SearchBy handleSearchChange={this.handleSearchChange}/>\n           </div>\n          <h2 className=\"noMatch\">No matches found.</h2> \n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <h1>Monsters Rolodex</h1>\n            <div className=\"searching\">\n              <SearchBox \n              placeholder='search monsters'\n              handleChange={this.handleChange}\n              />\n              <SearchBy handleSearchChange={this.handleSearchChange}/>\n            </div>\n          <CardList monsters={filteredMonsters}/> \n        </div>\n      );\n    }\n  }\n}\n\nexport default App;    ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}